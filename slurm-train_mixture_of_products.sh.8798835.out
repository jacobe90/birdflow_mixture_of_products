Namespace(root='/work/pi_drsheldon_umass_edu/birdflow_modeling/jacob_independent_study/birdflow_models', save_dir='/work/pi_drsheldon_umass_edu/birdflow_modeling/jacob_independent_study/mixture_of_products/experiments/training_speed_stress_test', species='amewoo', resolution=48, obs_weight=1.0, dist_weight=0.01, ent_weight=0.0001, dist_pow=0.4, dont_normalize=False, learning_rate=0.1, training_steps=600, rng_seed=42, num_components=450, fix_weights=False)
2023-08-01 16:34:03.806388: W external/tsl/tsl/framework/bfc_allocator.cc:485] Allocator (GPU_0_bfc) ran out of memory trying to allocate 3.77GiB (rounded to 4053434624)requested by op 
2023-08-01 16:34:03.811174: W external/tsl/tsl/framework/bfc_allocator.cc:497] ******____***********************************************___________________________________________
2023-08-01 16:34:03.811357: E external/xla/xla/pjrt/pjrt_stream_executor_client.cc:2432] Execution of replica 0 failed: RESOURCE_EXHAUSTED: Out of memory while trying to allocate 4053434400 bytes.
BufferAssignment OOM Debugging.
BufferAssignment stats:
             parameter allocation:    3.77GiB
              constant allocation:         0B
        maybe_live_out allocation:    3.77GiB
     preallocated temp allocation:         0B
                 total allocation:    7.55GiB
              total fragmentation:         0B (0.00%)
Peak buffers:
	Buffer 1:
		Size: 3.77GiB
		Entry Parameter Subshape: f32[225,2,1438,1566]
		==========================

	Buffer 2:
		Size: 3.77GiB
		Operator: op_name="jit(fn)/jit(main)/mul" source_file="/work/pi_drsheldon_umass_edu/birdflow_modeling/jacob_independent_study/mixture_of_products/birdflow_mixture_of_products/mixture_of_products_model.py" source_line=25
		XLA Label: fusion
		Shape: f32[225,2,1438,1566]
		==========================

	Buffer 3:
		Size: 1.8KiB
		Entry Parameter Subshape: f32[225,2]
		==========================


Traceback (most recent call last):
  File "/work/pi_drsheldon_umass_edu/birdflow_modeling/jacob_independent_study/mixture_of_products/birdflow_mixture_of_products/train_mixture_of_products.py", line 67, in <module>
    params, loss_dict = train_model(loss_fn,
                        ^^^^^^^^^^^^^^^^^^^^
  File "/work/pi_drsheldon_umass_edu/birdflow_modeling/jacob_independent_study/mixture_of_products/birdflow_mixture_of_products/mixture_of_products_model_training.py", line 92, in train_model
    params = model_forward.init(next(key), cells, weeks, num_products, learn_weights=learn_weights)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/haiku/_src/transform.py", line 114, in init_fn
    params, state = f.init(*args, **kwargs)
                    ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/haiku/_src/transform.py", line 338, in init_fn
    f(*args, **kwargs)
  File "/work/pi_drsheldon_umass_edu/birdflow_modeling/jacob_independent_study/mixture_of_products/birdflow_mixture_of_products/mixture_of_products_model.py", line 67, in predict
    return model()
           ^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/haiku/_src/module.py", line 426, in wrapped
    out = f(*args, **kwargs)
          ^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/contextlib.py", line 81, in inner
    return func(*args, **kwds)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/haiku/_src/module.py", line 272, in run_interceptors
    return bound_method(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/work/pi_drsheldon_umass_edu/birdflow_modeling/jacob_independent_study/mixture_of_products/birdflow_mixture_of_products/mixture_of_products_model.py", line 61, in __call__
    pairwise_marginals = [self.get_marginal(weights, [t, t + 1]) for t in range(self.weeks - 1)]
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/work/pi_drsheldon_umass_edu/birdflow_modeling/jacob_independent_study/mixture_of_products/birdflow_mixture_of_products/mixture_of_products_model.py", line 61, in <listcomp>
    pairwise_marginals = [self.get_marginal(weights, [t, t + 1]) for t in range(self.weeks - 1)]
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/haiku/_src/module.py", line 426, in wrapped
    out = f(*args, **kwargs)
          ^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/contextlib.py", line 81, in inner
    return func(*args, **kwds)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/contextlib.py", line 81, in inner
    return func(*args, **kwds)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/haiku/_src/module.py", line 272, in run_interceptors
    return bound_method(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/work/pi_drsheldon_umass_edu/birdflow_modeling/jacob_independent_study/mixture_of_products/birdflow_mixture_of_products/mixture_of_products_model.py", line 39, in get_marginal
    marginal = self.batched_get_marginals(batched_weights, components, batched_ks).sum(axis=0)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/haiku/_src/stateful.py", line 833, in mapped_fun
    out, state = mapped_pure_fun(args, state)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/jax/_src/traceback_util.py", line 166, in reraise_with_filtered_traceback
    return fun(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/jax/_src/api.py", line 1253, in vmap_f
    out_flat = batching.batch(
               ^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/jax/_src/linear_util.py", line 166, in call_wrapped
    ans = self.f(*args, **dict(self.params, **kwargs))
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/haiku/_src/stateful.py", line 812, in pure_fun
    out = fun(*args)
          ^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/haiku/_src/module.py", line 426, in wrapped
    out = f(*args, **kwargs)
          ^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/contextlib.py", line 81, in inner
    return func(*args, **kwds)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/contextlib.py", line 81, in inner
    return func(*args, **kwds)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/haiku/_src/module.py", line 272, in run_interceptors
    return bound_method(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/work/pi_drsheldon_umass_edu/birdflow_modeling/jacob_independent_study/mixture_of_products/birdflow_mixture_of_products/mixture_of_products_model.py", line 28, in marginal_batch
    marginal = self.vectorized_get_prod_k_marginal(ks, components, weights).sum(axis=0)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/haiku/_src/stateful.py", line 833, in mapped_fun
    out, state = mapped_pure_fun(args, state)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/jax/_src/traceback_util.py", line 166, in reraise_with_filtered_traceback
    return fun(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/jax/_src/api.py", line 1253, in vmap_f
    out_flat = batching.batch(
               ^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/jax/_src/linear_util.py", line 166, in call_wrapped
    ans = self.f(*args, **dict(self.params, **kwargs))
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/haiku/_src/stateful.py", line 812, in pure_fun
    out = fun(*args)
          ^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/haiku/_src/module.py", line 426, in wrapped
    out = f(*args, **kwargs)
          ^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/contextlib.py", line 81, in inner
    return func(*args, **kwds)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/contextlib.py", line 81, in inner
    return func(*args, **kwds)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/haiku/_src/module.py", line 272, in run_interceptors
    return bound_method(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/work/pi_drsheldon_umass_edu/birdflow_modeling/jacob_independent_study/mixture_of_products/birdflow_mixture_of_products/mixture_of_products_model.py", line 25, in get_prod_k_marginal
    return weight * prod_k_marginal
           ~~~~~~~^~~~~~~~~~~~~~~~~
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/jax/_src/core.py", line 649, in __mul__
    def __mul__(self, other): return self.aval._mul(self, other)
                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/jax/_src/numpy/array_methods.py", line 251, in deferring_binary_op
    return binary_op(*args)
           ^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/jax/_src/traceback_util.py", line 166, in reraise_with_filtered_traceback
    return fun(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/jax/_src/pjit.py", line 238, in cache_miss
    outs, out_flat, out_tree, args_flat = _python_pjit_helper(
                                          ^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/jax/_src/pjit.py", line 185, in _python_pjit_helper
    out_flat = pjit_p.bind(*args_flat, **params)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/jax/_src/core.py", line 2592, in bind
    return self.bind_with_trace(top_trace, args, params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/jax/_src/core.py", line 363, in bind_with_trace
    out = trace.process_primitive(self, map(trace.full_raise, args), params)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/jax/_src/interpreters/batching.py", line 357, in process_primitive
    val_out, dim_out = batched_primitive(vals_in, dims_in, **params)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/jax/_src/pjit.py", line 1497, in _pjit_batcher
    vals_out = pjit_p.bind(
               ^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/jax/_src/core.py", line 2592, in bind
    return self.bind_with_trace(top_trace, args, params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/jax/_src/core.py", line 363, in bind_with_trace
    out = trace.process_primitive(self, map(trace.full_raise, args), params)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/jax/_src/interpreters/batching.py", line 357, in process_primitive
    val_out, dim_out = batched_primitive(vals_in, dims_in, **params)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/jax/_src/pjit.py", line 1497, in _pjit_batcher
    vals_out = pjit_p.bind(
               ^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/jax/_src/core.py", line 2592, in bind
    return self.bind_with_trace(top_trace, args, params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/jax/_src/core.py", line 363, in bind_with_trace
    out = trace.process_primitive(self, map(trace.full_raise, args), params)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/jax/_src/core.py", line 817, in process_primitive
    return primitive.impl(*tracers, **params)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/jax/_src/pjit.py", line 1252, in _pjit_call_impl
    return compiled.unsafe_call(*args)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/jax/_src/profiler.py", line 314, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/jax/_src/interpreters/pxla.py", line 1916, in __call__
    results = self.xla_executable.execute_sharded(input_bufs)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
jax._src.traceback_util.UnfilteredStackTrace: jaxlib.xla_extension.XlaRuntimeError: RESOURCE_EXHAUSTED: Out of memory while trying to allocate 4053434400 bytes.
BufferAssignment OOM Debugging.
BufferAssignment stats:
             parameter allocation:    3.77GiB
              constant allocation:         0B
        maybe_live_out allocation:    3.77GiB
     preallocated temp allocation:         0B
                 total allocation:    7.55GiB
              total fragmentation:         0B (0.00%)
Peak buffers:
	Buffer 1:
		Size: 3.77GiB
		Entry Parameter Subshape: f32[225,2,1438,1566]
		==========================

	Buffer 2:
		Size: 3.77GiB
		Operator: op_name="jit(fn)/jit(main)/mul" source_file="/work/pi_drsheldon_umass_edu/birdflow_modeling/jacob_independent_study/mixture_of_products/birdflow_mixture_of_products/mixture_of_products_model.py" source_line=25
		XLA Label: fusion
		Shape: f32[225,2,1438,1566]
		==========================

	Buffer 3:
		Size: 1.8KiB
		Entry Parameter Subshape: f32[225,2]
		==========================

The stack trace below excludes JAX-internal frames.
The preceding is the original exception that occurred, unmodified.

--------------------

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/work/pi_drsheldon_umass_edu/birdflow_modeling/jacob_independent_study/mixture_of_products/birdflow_mixture_of_products/train_mixture_of_products.py", line 67, in <module>
    params, loss_dict = train_model(loss_fn,
                        ^^^^^^^^^^^^^^^^^^^^
  File "/work/pi_drsheldon_umass_edu/birdflow_modeling/jacob_independent_study/mixture_of_products/birdflow_mixture_of_products/mixture_of_products_model_training.py", line 92, in train_model
    params = model_forward.init(next(key), cells, weeks, num_products, learn_weights=learn_weights)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/haiku/_src/transform.py", line 114, in init_fn
    params, state = f.init(*args, **kwargs)
                    ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/haiku/_src/transform.py", line 338, in init_fn
    f(*args, **kwargs)
  File "/work/pi_drsheldon_umass_edu/birdflow_modeling/jacob_independent_study/mixture_of_products/birdflow_mixture_of_products/mixture_of_products_model.py", line 67, in predict
    return model()
           ^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/haiku/_src/module.py", line 426, in wrapped
    out = f(*args, **kwargs)
          ^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/contextlib.py", line 81, in inner
    return func(*args, **kwds)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/haiku/_src/module.py", line 272, in run_interceptors
    return bound_method(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/work/pi_drsheldon_umass_edu/birdflow_modeling/jacob_independent_study/mixture_of_products/birdflow_mixture_of_products/mixture_of_products_model.py", line 61, in __call__
    pairwise_marginals = [self.get_marginal(weights, [t, t + 1]) for t in range(self.weeks - 1)]
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/work/pi_drsheldon_umass_edu/birdflow_modeling/jacob_independent_study/mixture_of_products/birdflow_mixture_of_products/mixture_of_products_model.py", line 61, in <listcomp>
    pairwise_marginals = [self.get_marginal(weights, [t, t + 1]) for t in range(self.weeks - 1)]
                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/haiku/_src/module.py", line 426, in wrapped
    out = f(*args, **kwargs)
          ^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/contextlib.py", line 81, in inner
    return func(*args, **kwds)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/contextlib.py", line 81, in inner
    return func(*args, **kwds)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/haiku/_src/module.py", line 272, in run_interceptors
    return bound_method(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/work/pi_drsheldon_umass_edu/birdflow_modeling/jacob_independent_study/mixture_of_products/birdflow_mixture_of_products/mixture_of_products_model.py", line 39, in get_marginal
    marginal = self.batched_get_marginals(batched_weights, components, batched_ks).sum(axis=0)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/haiku/_src/stateful.py", line 833, in mapped_fun
    out, state = mapped_pure_fun(args, state)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/haiku/_src/stateful.py", line 812, in pure_fun
    out = fun(*args)
          ^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/haiku/_src/module.py", line 426, in wrapped
    out = f(*args, **kwargs)
          ^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/contextlib.py", line 81, in inner
    return func(*args, **kwds)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/contextlib.py", line 81, in inner
    return func(*args, **kwds)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/haiku/_src/module.py", line 272, in run_interceptors
    return bound_method(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/work/pi_drsheldon_umass_edu/birdflow_modeling/jacob_independent_study/mixture_of_products/birdflow_mixture_of_products/mixture_of_products_model.py", line 28, in marginal_batch
    marginal = self.vectorized_get_prod_k_marginal(ks, components, weights).sum(axis=0)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/haiku/_src/stateful.py", line 833, in mapped_fun
    out, state = mapped_pure_fun(args, state)
  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/haiku/_src/stateful.py", line 812, in pure_fun
    out = fun(*args)
          ^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/haiku/_src/module.py", line 426, in wrapped
    out = f(*args, **kwargs)
          ^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/contextlib.py", line 81, in inner
    return func(*args, **kwds)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/contextlib.py", line 81, in inner
    return func(*args, **kwds)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/haiku/_src/module.py", line 272, in run_interceptors
    return bound_method(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/work/pi_drsheldon_umass_edu/birdflow_modeling/jacob_independent_study/mixture_of_products/birdflow_mixture_of_products/mixture_of_products_model.py", line 25, in get_prod_k_marginal
    return weight * prod_k_marginal
           ~~~~~~~^~~~~~~~~~~~~~~~~
  File "/home/jepstein_umass_edu/.conda/envs/birdflow_two/lib/python3.11/site-packages/jax/_src/numpy/array_methods.py", line 251, in deferring_binary_op
    return binary_op(*args)
           ^^^^^^^^^^^^^^^^
jaxlib.xla_extension.XlaRuntimeError: RESOURCE_EXHAUSTED: Out of memory while trying to allocate 4053434400 bytes.
BufferAssignment OOM Debugging.
BufferAssignment stats:
             parameter allocation:    3.77GiB
              constant allocation:         0B
        maybe_live_out allocation:    3.77GiB
     preallocated temp allocation:         0B
                 total allocation:    7.55GiB
              total fragmentation:         0B (0.00%)
Peak buffers:
	Buffer 1:
		Size: 3.77GiB
		Entry Parameter Subshape: f32[225,2,1438,1566]
		==========================

	Buffer 2:
		Size: 3.77GiB
		Operator: op_name="jit(fn)/jit(main)/mul" source_file="/work/pi_drsheldon_umass_edu/birdflow_modeling/jacob_independent_study/mixture_of_products/birdflow_mixture_of_products/mixture_of_products_model.py" source_line=25
		XLA Label: fusion
		Shape: f32[225,2,1438,1566]
		==========================

	Buffer 3:
		Size: 1.8KiB
		Entry Parameter Subshape: f32[225,2]
		==========================


